{"version":3,"sources":["App.tsx","index.tsx"],"names":["productsgoodsFromServer","App","useState","selectedGoods","setSelectedGoods","className","map","product","includes","type","onClick","newGoods","prev","filter","good","newGood","length","getTitle","ReactDOM","render","document","getElementById"],"mappings":"uNAGMA,EAAoC,CACxC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2EaC,EAxEO,WACpB,MAA0CC,mBAAS,CAAC,SAApD,mBAAOC,EAAP,KAAsBC,EAAtB,KAuBA,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,SACGL,EAAwBM,KAAI,SAACC,GAC5B,OACE,qBAAkBF,UAAWF,EAAcK,SAAd,WAA2BD,IAAa,oBAAsB,YAA3F,UACE,sBAAMF,UAAU,YAAhB,SACGE,IAEFJ,EAAcK,SAAd,WAA2BD,IAExB,wBACEE,KAAK,SACLJ,UAAU,qBACVK,QAAS,kBA/BXC,EA+BwB,IAAD,OAAKJ,QA9B1CH,GAAiB,SAAAQ,GAAI,OAAIA,EAAKC,QAAO,SAAAC,GAAI,OAAIA,IAASH,QADzC,IAACA,GA4BA,oBASA,wBACEF,KAAK,SACLJ,UAAU,qBACVK,QAAS,kBA5CdK,EA4CwB,IAAD,OAAKR,QA3CvCH,GAAiB,SAAAQ,GAAI,4BAAQA,GAAR,CAAcG,OADzB,IAACA,GAyCG,sBAfGR,QA4Bf,wBACEE,KAAK,SACLJ,UAAU,4BACVK,QAAS,kBAAMN,EAAiB,KAHlC,mBAQA,oBAAIC,UAAU,aAAd,SAtDa,WACf,OAAQF,EAAca,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUb,EAAV,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBACF,QACE,MAAM,GAAN,OAAUA,EAAV,kBA8CCc,SC/ETC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.542ccb5d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nconst productsgoodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [selectedGoods, setSelectedGoods] = useState([' Jam']);\n\n  const add = (newGood: string) => {\n    setSelectedGoods(prev => [...prev, newGood]);\n  };\n\n  const remove = (newGoods: string) => {\n    setSelectedGoods(prev => prev.filter(good => good !== newGoods));\n  };\n\n  const getTitle = () => {\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selceted';\n      case 1:\n        return `${selectedGoods} is selected`;\n      case 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n      default:\n        return `${selectedGoods} are selected`;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <ul className=\"App__list\">\n        {productsgoodsFromServer.map((product) => {\n          return (\n            <li key={product} className={selectedGoods.includes(` ${product}`) ? 'App__item--active' : 'App__item'}>\n              <span className=\"App__span\">\n                {product}\n              </span>\n              {selectedGoods.includes(` ${product}`)\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"App__button button\"\n                    onClick={() => remove(` ${product}`)}\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"App__button button\"\n                    onClick={() => add(` ${product}`)}\n                  >\n                    Select\n                  </button>\n                )}\n            </li>\n          );\n        })}\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"App__button--clear button\"\n        onClick={() => setSelectedGoods([])}\n      >\n        Clear\n      </button>\n\n      <h1 className=\"App__title\">\n        {getTitle()}\n      </h1>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}